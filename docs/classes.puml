@startuml Bomber

namespace GameFramework {

interface IMapObject2D {
	+ <<get>> Position: IPosition2D
	+ <<get>> IsObstacle: bool
	+ SteppedOn(unit2D: IUnit2D): void
}

interface IUnit2D extends IMapObject2D {
	+ Step(mapObject: IMapObject2D): void
}

interface IPlayer2D extends IUnit2D {
	+ <<get>> Position: IPosition2D
	+ <<get>> IsObstacle: bool
	+ SteppedOn(unit2D: IUnit2D): void
	+ Step(mapObject: IMapObject2D): void
}

}

namespace UI.Shared {


interface IBomberMapEntityView {

}

interface IBombView extends IBomberMapEntityView {

}

interface IEnemyView extends IBomberMapEntityView {

}

interface IPlayerView extends IBomberMapEntityView {

}

interface IBomberMapTileView {

}

}

namespace UI.Forms {
	
interface IMainWindow{

}

interface IMainWindowPresenter {

}

class MainWindow implements IMainWindow {

}

class MainWindowPresenter implements IMainWindowPresenter {

}

class PlayerView implements UI.Shared.IPlayerView {

}

class EnemyView implements UI.Shared.IEnemyView {
	
}

class BombView implements UI.Shared.IBombView {
	
}

class Hole implements IDeadlyTile {

}

class Ground implements GameFramework.IMapObject2D {

}

class Wall implements GameFramework.IMapObject2D {

}

IMainWindow *-- IMainWindowPresenter

}

namespace UI.WPF {

}

class UI.Forms.FormsTileFactory implements BL.ITileFactory {
	
}

UI.Forms.PlayerView *-- BL.PlayerModel
UI.Forms.BombView *-- BL.Bomb
UI.Forms.EnemyView *-- BL.Enemy
@enduml